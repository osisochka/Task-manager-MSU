/**
 * QRCode.js
 * @version v1.0.0
 */

var QRCode;

(function () {
    // QR код уровни коррекции ошибок
    var QRErrorCorrectLevel = {
        L: 1,
        M: 0,
        Q: 3,
        H: 2
    };

    // Основной класс QRCode
    QRCode = function (el, options) {
        if (typeof el === 'string') {
            el = document.getElementById(el);
        }

        this._el = el;
        this._options = {
            width: 256,
            height: 256,
            typeNumber: 4,
            colorDark: "#000000",
            colorLight: "#ffffff",
            correctLevel: QRErrorCorrectLevel.H
        };

        if (typeof options === 'string') {
            options = {
                text: options
            };
        }

        if (options) {
            for (var i in options) {
                this._options[i] = options[i];
            }
        }

        if (this._options.text) {
            this.makeCode(this._options.text);
        }
    };

    // Публичные методы
    QRCode.prototype.makeCode = function (text) {
        // Заглушка вместо генерации настоящего QR кода
        // В реальном приложении здесь должна быть сложная логика создания QR кода

        // Создаём канвас для отображения
        var canvas = document.createElement('canvas');
        canvas.width = this._options.width;
        canvas.height = this._options.height;
        this._el.innerHTML = "";
        this._el.appendChild(canvas);

        var ctx = canvas.getContext('2d');
        
        // Рисуем рамку и фон
        ctx.fillStyle = this._options.colorLight;
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        
        // Рисуем простую имитацию QR-кода
        ctx.fillStyle = this._options.colorDark;
        
        // Левый верхний маркер
        ctx.fillRect(10, 10, 40, 40);
        ctx.fillStyle = this._options.colorLight;
        ctx.fillRect(20, 20, 20, 20);
        ctx.fillStyle = this._options.colorDark;
        ctx.fillRect(25, 25, 10, 10);
        
        // Правый верхний маркер
        ctx.fillStyle = this._options.colorDark;
        ctx.fillRect(canvas.width - 50, 10, 40, 40);
        ctx.fillStyle = this._options.colorLight;
        ctx.fillRect(canvas.width - 40, 20, 20, 20);
        ctx.fillStyle = this._options.colorDark;
        ctx.fillRect(canvas.width - 35, 25, 10, 10);
        
        // Левый нижний маркер
        ctx.fillStyle = this._options.colorDark;
        ctx.fillRect(10, canvas.height - 50, 40, 40);
        ctx.fillStyle = this._options.colorLight;
        ctx.fillRect(20, canvas.height - 40, 20, 20);
        ctx.fillStyle = this._options.colorDark;
        ctx.fillRect(25, canvas.height - 35, 10, 10);
        
        // Рисуем рандомный паттерн в центре
        for (var x = 60; x < canvas.width - 60; x += 10) {
            for (var y = 60; y < canvas.height - 60; y += 10) {
                if (Math.random() > 0.5) {
                    ctx.fillRect(x, y, 8, 8);
                }
            }
        }
        
        // Отображаем текст в нижней части
        var textWidth = Math.min(100, text.length * 5);
        var fontSize = Math.min(12, 200 / text.length);
        ctx.font = fontSize + 'px Arial';
        ctx.fillStyle = '#333';
        ctx.fillText('QR код для профиля', canvas.width/2 - 60, canvas.height - 10);
    };

    QRCode.prototype.clear = function () {
        this._el.innerHTML = '';
    };

    // Экспорт уровней коррекции ошибок
    QRCode.CorrectLevel = QRErrorCorrectLevel;
})(); 